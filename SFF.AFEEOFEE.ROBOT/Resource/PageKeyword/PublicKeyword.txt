*** Settings ***
Library           Collections
Library           Selenium2Library    15
Library           Process
Resource          ExcelKeyword.txt
Library           OperatingSystem

*** Keywords ***
FireFoxDriver
    [Documentation]    sys.modules['selenium.webdriver'].FirefoxProfile('C:\\Users\\lucksinaree.p\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\u9yseyib.LAKSINA')
    Comment    ${profile}=    Evaluate    sys.modules['selenium.webdriver'].FirefoxProfile('C:\\Users\\lucksinaree.p\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\u9yseyib.LAKSINA')    sys
    ${profile}=    Evaluate    sys.modules['selenium.webdriver'].FirefoxProfile('C:\FirefoxProfile')    sys
    Create Webdriver    Firefox    firefox_profile=${profile}
    Go To    https://sffsit.ais.co.th:8103/SFFWeb/pages/home/portal.jsf

OpenBrowerSericeFulfillment
    Comment    Run Process    Taskkill /IM IEDriverServer.exe /F    shell=True
    Comment    Open Browser    https://sffsit.ais.co.th:8103/SFFWeb/pages/home/portal.jsf
    Comment    FireFoxDriver
    IEDriver
    Maximize Browser Window
    Wait Until Element Is Visible    xpath=//input[@id='frm:username']
    Input Text    xpath=//input[@id='frm:username']    ${UsernameRobot}
    Input Text    xpath=//input[@id='frm:password']    ${Password}
    Click Element    xpath=//input[@value='Login']
    Wait Until Element Is Visible    xpath=//img[@src='../../images/header/logo_ais.jpg']    30s

WaitBeingProcess
    Wait Until Keyword Succeeds    130s    1s    Xpath Should Match X Times    //div[contains(@id,'waitOpenedState') or contains(@id,'wait-newOpenedState') or contains(@id,'waitContainer') or contains(@id,'wait-newContainer')][contains(@style,'display: none') or contains(@style,'DISPLAY: none')]    2

IEDriver
    Run Process    Taskkill /IM IEDriverServer.exe /F    shell=True
    ${caps}=    Evaluate    sys.modules['selenium.webdriver'].DesiredCapabilities.INTERNETEXPLORER    sys,selenium.webdriver
    Set To Dictionary    ${caps}    ignoreProtectedModeSettings    ${True}
    Comment    Set To Dictionary    ${caps}    requireWindowFocus    ${True}
    Set To Dictionary    ${caps}    enablePersistentHover    ${False}
    Set To Dictionary    ${caps}    ie.forceCreateProcessApi    ${True}
    Set To Dictionary    ${caps}    ie.browserCommandLineSwitches    -private
    Set To Dictionary    ${caps}    ie.ensureCleanSession    ${True}
    Create Webdriver    Ie    capabilities=${caps}
    Go To    https://sffsit.ais.co.th:8103/SFFWeb/pages/home/portal.jsf
    Wait Until Element Is Visible    xpath=//a[@id='overridelink']
    Click Element    xpath=//a[@id='overridelink']

CheckAlertMsg
    [Arguments]    ${Locator}    ${sheetnameExcel}    ${ColumnWriteExcelTitle}    ${RowTitle}    ${DataonRow}
    ${Status}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${Locator}    7s
    ${Row}=    WhatsRow_DataNewRegister    ${sheetnameExcel}    ${RowTitle}    ${DataonRow}
    ${Column}=    Whatscolumn_DataNewRegister    ${sheetnameExcel}    ${ColumnWriteExcelTitle}
    ${Message}=    Run Keyword If    ${Status} == True    Get Text    ${Locator}
    Run Keyword If    ${Status} == True    Run Keywords    CustomXlsxLibrary.Put String To Cell    ${sheetnameExcel}    ${Column}${Row}    ${Message}
    ...    AND    CustomXlsxLibrary.Save Excel    ${PathFile}${ResultExcel}
    ...    AND    Return From Keyword    False
    [Return]    ${Status}

CreateResultFileForOrderFree
    [Arguments]    ${FolderOrderFreeRegister}    ${package}    ${OrderNo}
    ${ListPicture}    List Files In Directory    ${PathFile}${FolderOrderFreeRegister}    *OrderFreeStep*.png
    Sort List    ${ListPicture}
    log    ${ListPicture}
    OpenExcelByFile    ${CaptureOrderFreeResult}
    Create Workbook
    Add New Sheet    ${FolderOrderFreeRegister}
    @{StepList}=    Create List    Step 1 เลือก Menu \ \ Developer >> \ \ New Registration Payment Advanced    Step 2    Step 3 Search package "${package}"    Step 4    Step 5
    ...    Step 5 Receipt    Order Complete : ${OrderNo}
    ${gap}    Set Variable    3
    ${ListIndex}    Get Length    ${ListPicture}
    : FOR    ${i}    IN RANGE    0    ${ListIndex}
    \    Run Keyword If    "${OrderNo}"=="${None}"    Exit For Loop
    \    CustomXlsxLibrary.Put String To Cell    ${FolderOrderFreeRegister}    B${gap}    ${StepList[${i}]}
    \    ${gap}    Evaluate    ${gap}+${2}
    \    CustomXlsxLibrary.Put Image To Cell    ${FolderOrderFreeRegister}    B${gap}    ${PathFile}${FolderOrderFreeRegister}\\${ListPicture[${i}]}
    \    ${gap}    Evaluate    ${gap}+${75}
    CustomXlsxLibrary.Save Excel    ${PathFile}${CaptureOrderFreeResult}    #H:\\AIS\\SFF\\AIS\\New\\SaveExcel\\CaptureOrderFreeResult.xlsx

CloseBrowserAndKillProcess
    Comment    Close Browser
    Run Process    Taskkill /IM IEDriverServer.exe /F    shell=True

WaitAndReturnStatus
    [Arguments]    ${Locator}
    ${Status}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${Locator}    5s
    [Return]    ${Status}

WaitAndClickElement
    [Arguments]    ${Locator}
    Wait Until Element Is Visible    ${Locator}    5s
    Click Element    ${Locator}

WaitAndInputText
    [Arguments]    ${Locator}    ${Value}
    Wait Until Element Is Visible    ${Locator}    5s
    Input Text    ${Locator}    ${Value}

WaitAndGetElementAttribute
    [Arguments]    ${Locator}    ${Attribut}
    Wait Until Element Is Visible    ${Locator}    5s
    ${Value}=    Get Element Attribute    ${Locator}${Attribut}
    [Return]    ${Value}

WaitAndGetText
    [Arguments]    ${Locator}
    Wait Until Element Is Visible    ${Locator}    5s
    ${Value}=    Get Text    ${Locator}
    [Return]    ${Value}

InsertDataToExcel
    [Arguments]    ${Data}    ${sheetnameExcel}    ${ColumnWriteExcelTitle}    ${RowTitle}    ${DataonRow}
    ${Row}=    WhatsRow_DataNewRegister    ${sheetnameExcel}    ${RowTitle}    ${DataonRow}
    ${Column}=    Whatscolumn_DataNewRegister    ${sheetnameExcel}    ${ColumnWriteExcelTitle}
    CustomXlsxLibrary.Put String To Cell    ${sheetnameExcel}    ${Column}${Row}    ${Data}

CheckAlertMsgModified
    [Arguments]    ${LocatorError}    ${sheetnameExcel}    ${ColumnWriteExcelTitle}    ${RowTitle}    ${DataonRow}
    ${ErrorShow}=    Run Keyword And Return Status    Wait Until Element Is Visible    ${LocatorError}
    ${Row}=    WhatsRow_DataNewRegister    ${sheetnameExcel}    ${RowTitle}    ${DataonRow}
    ${Column}=    Whatscolumn_DataNewRegister    ${sheetnameExcel}    ${ColumnWriteExcelTitle}
    ${errorMsg}=    Run Keyword If    ${ErrorShow} == True    Get Text    ${LocatorError}
    ${StatusError}=    Run Keyword If    ${ErrorShow} == True    Run Keywords    CustomXlsxLibrary.Put String To Cell    ${sheetnameExcel}    ${Column}${Row}
    ...    ${errorMsg}
    ...    AND    Return From Keyword    False
    ...    ELSE    Return From Keyword    True
    [Return]    ${StatusError}
